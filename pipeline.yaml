---
AWSTemplateFormatVersion: 2010-09-09
Parameters: {}
Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Delete
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken                                         
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:*
              - Resource: "*"
                Effect: Allow
                Action:                  
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
                  - states:DescribeStateMachine
                  - states:StartExecution
                  - states:DescribeExecution  
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  CodeBuildDockerProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - printenv | less
                - $(aws ecr get-login --no-include-email)
                - dt=`date '+%m-%d-%Y-%H-%M-%S'`
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)-${dt}"     
                - echo "$TAG"           
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
                - echo "IMAGE_URI=${IMAGE_URI}"
            build:
              commands:
                - cd container
                - docker build --tag "$IMAGE_URI" .
            post_build:
              commands:
                - docker push "$IMAGE_URI"
                - cd ..
                - printf '{"commitID":"%s","imageUri":"%s"}' "$TAG" "$IMAGE_URI" > sf_start_params.json
          artifacts:
            files: sf_start_params.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      Name: !Join [ "-", [!Ref AWS::StackName, "Docker"]]
      ServiceRole: !Ref CodeBuildServiceRole

  CodeBuildCfnProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
            pre_build:
              commands:
                - echo "Starting build ViaVarejo MLops stack"
                - pip install -q awscli aws-sam-cli wheel
                - ls
                - pwd
            build:
              commands:
                - sam build
                - sam package --output-template-file packaged.yaml --s3-bucket vvml-resources --s3-prefix data-artifacts --region us-east-1
                - sam deploy --stack-name viavarejo-mlops-test --template-file packaged.yaml --capabilities CAPABILITY_IAM --region us-east-1 --no-fail-on-empty-changeset
            post_build:
              commands:
                - echo "Packaging completed on `date`"
          artifacts:
            files:
              - packaged.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.7.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
      Name: !Join [ "-", [!Ref AWS::StackName, "CFN"]]
      ServiceRole: !Ref CodeBuildServiceRole  

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: GetSource
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: '{{resolve:secretsmanager:personal/github::owner}}'
                Repo: "vvml"
                Branch: "main"
                OAuthToken: '{{resolve:secretsmanager:personal/github::key}}'
              OutputArtifacts:
                - Name: App
              RunOrder: 1       
        - Name: BuildContainerandExecuteStepfunction
          Actions:
            - Name: BuildDockerContainerImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildDockerProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutputImage
              RunOrder: 1
            - Name: BuildCfnContainerImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildCfnProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildCfnOutputImage
              RunOrder: 2          
            - Name: ExecuteSagemakerMLOpsStepFunction
              InputArtifacts:
                - Name: BuildOutputImage
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: StepFunctions
              OutputArtifacts:
                - Name: myOutputArtifact
              Configuration:
                StateMachineArn: arn:aws:states:us-east-1:166202287709:stateMachine:ViaVarejoStateMachine-166202287709
                ExecutionNamePrefix: start-execution
                InputType: FilePath
                Input: sf_start_params.json
              RunOrder: 3  
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
  ArtifactBucket:
    Value: !Ref ArtifactBucket