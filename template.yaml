AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: ViaVerjo MLOps Test Infra
Parameters:
  StateMachineName:
    Type: String
    Default: ViaVarejoStateMachine
  S3ModelBucket:
    Type: String
    Default: ViaVarejoMLOps-Model-Bucket
Resources:
  HttpAPI:
    Type: AWS::Serverless::HttpApi
    Properties:      
      StageName: v1      
  ViaVarejoMLOpsStateMachine:
    Type: AWS::Serverless::StateMachine 
    Properties:
      Name: !Sub ${StateMachineName}-${AWS::AccountId}
      DefinitionUri: ./statemachine/mlops.asl.json
      DefinitionSubstitutions:
        UpdateSagemakerEndpointAPI: !GetAtt UpdateSagemakerEndpointAPI.Arn
        SagemakerRoleArn: !GetAtt SageMakerRole.Arn
        S3ModelBucket: !Ref S3ModelBucket
      Role: !GetAtt StepFunctionsRole.Arn
  UpdateSagemakerEndpointAPI:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/update_sagemakerEndpoint_API/
      Handler: app.lambda_handler
      Runtime: python3.7
      Timeout: 600
      Policies:
      - Version: '2012-10-17' 
        Statement:
          - Effect: Allow
            Action:
              - lambda:UpdateFunctionConfiguration
            Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${TestSagemakerEndpoint}
      - Version: '2012-10-17' 
        Statement:
          - Effect: Allow
            Action:
              - sagemaker:DescribeEndpoint
            Resource: '*'  
      Environment:
        Variables:
          Endpoint_FunctionName: !Ref TestSagemakerEndpoint
          HttpApiID: !Ref HttpAPI
  TestSagemakerEndpoint:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/api_sagemaker_endpoint/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - sagemaker:InvokeEndpoint
              Resource: '*'         
      Events:
        ExplicitApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpAPI
            Method: POST
            Path: /invokeSagemakerAPI
  SageMakerRole:
      Type: AWS::IAM::Role
      Properties:       
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - sagemaker.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Description: String
        ManagedPolicyArns:
          - !Ref SagemakerPolicy    
        Path: /      
  SagemakerPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        Description: Step function use policy
        PolicyDocument: !Sub
            - |-
              {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                              "Effect": "Allow",
                              "Action": [
                                  "cloudwatch:PutMetricData",                                  
                                  "logs:CreateLogGroup",
                                  "logs:CreateLogStream",
                                  "logs:DescribeLogStreams",
                                  "logs:PutLogEvents",
                                  "logs:GetLogEvents",                                                                                             
                                  "sagemaker:*"                                                             
                              ],
                              "Resource": [
                                  "*"
                              ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "iam:PassedToService": "sagemaker.amazonaws.com"
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                            ],
                            "Resource": ["*"]
                        },                        
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:*"
                            ],
                            "Resource": [
                                "arn:aws:s3:::*",
                                "arn:aws:s3:::*/*"
                            ]
                        }
                      ]
              }
            - {
                AccountID: !Ref AWS::AccountId, 
                Region: !Ref AWS::Region,
                S3ModelBucket: !Ref S3ModelBucket  
              } 
  StepFunctionsRole:
      Type: AWS::IAM::Role
      Properties:       
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - log:*
              Resource: '*' 
            - Effect: Allow
              Principal:
                Service:
                  - states.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Description: String
        ManagedPolicyArns:
          - !Ref StepFunctionsPolicy    
        Path: /      
  StepFunctionsPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      DependsOn: SageMakerRole
      Properties:
        Description: Step function use policy
        PolicyDocument: !Sub
            - |-
              {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                              "Effect": "Allow",
                              "Action": [
                                  "lambda:InvokeFunction",                                  
                                  "states:StartExecution"                                                                 
                              ],
                              "Resource": [
                                  "*"
                              ]
                          },                          
                          {
                            "Effect": "Allow",
                            "Action": [
                              "sagemaker:CreateTrainingJob",
                              "sagemaker:DescribeTrainingJob",
                              "sagemaker:StopTrainingJob",
                              "sagemaker:CreateModel",
                              "sagemaker:CreateTransformJob",
                              "sagemaker:CreateEndpointConfig",
                              "sagemaker:CreateEndpoint"
                            ],
                            "Resource": [
                              "arn:aws:sagemaker:${Region}:${AccountID}:training-job/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:model/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:transform-job/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:endpoint-config/*",
                              "arn:aws:sagemaker:${Region}:${AccountID}:endpoint/*"
                            ]
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "sagemaker:ListTags"
                            ],
                            "Resource": [
                              "*"
                            ]
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "iam:PassRole"
                            ],
                            "Resource": [
                              "${SageMakerRole}"
                            ],
                            "Condition": {
                              "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                              }
                            }
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "events:PutTargets",
                              "events:PutRule",
                              "events:DescribeRule"
                            ],
                            "Resource": [
                              "arn:aws:events:${Region}:${AccountID}:rule/StepFunctionsGetEventsForSageMakerTrainingJobsRule",
                              "arn:aws:events:${Region}:${AccountID}:rule/StepFunctionsGetEventsForSageMakerTransformJobsRule"
                            ]
                          },
                          {
                            "Effect": "Allow",
                            "Action": [
                              "s3:*"
                            ],
                            "Resource": [
                              "*"
                            ]
                          } 
                      ]
                }
            - {
                AccountID: !Ref AWS::AccountId, 
                Region: !Ref AWS::Region,
                SageMakerRole: !GetAtt SageMakerRole.Arn
                
              }
Outputs:
  ViaVarejoMLOpsStateMachineArn:
    Description: "State machine ARN"
    Value: !Ref ViaVarejoMLOpsStateMachine

  
